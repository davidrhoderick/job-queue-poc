type Data {
  anything: String!
}

type Mutation {
  testOperationStatus(input: TestOperationStatusInput): OperationStatus!
}

type OperationStatus {
  data: Data
  errors: [UserError]
  id: String!
  status: OperationStatusEnum!
}

enum OperationStatusEnum {
  FAIL
  IN_PROGRESS
  NOT_FOUND
  QUEUED
  SUCCESS
  UNKNOWN
}

type Query {
  operationStatus(id: String!): OperationStatus!
}

input TestOperationStatusInput {
  duration: Int!
  shouldFail: Boolean
}

type UserError {
  message: String!
  path: String
}